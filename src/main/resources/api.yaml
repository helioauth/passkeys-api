openapi: 3.0.1
info:
  title: HelioAuth Passkeys API
  version: v1
servers:
  - url: https://api.helioauth.com/
    description: Production
tags:
  - name: Applications
    description: CRUD operations for client applications.
  - name: Sign-up
    description: Passkey sign-up from browser
  - name: Sign-in
    description: Passkey sign-in from browser
  - name: Users
    description: User account management
paths:
  /admin/v1/apps:
    get:
      tags:
        - Applications
      summary: List all applications
      description: Retrieves a list of all applications.
      operationId: listAll
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Application"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - admin-api: [ ]
    post:
      tags:
        - Applications
      summary: Add a new application
      description: Creates a new application and returns its details.
      operationId: add
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/AddApplicationRequest"
        required: true
      responses:
        "201":
          description: Created
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Application"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - admin-api: [ ]
  /admin/v1/apps/{id}:
    get:
      tags:
        - Applications
      summary: Get an application
      description: Retrieves details of a specific application by its ID.
      operationId: get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Application"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - admin-api: [ ]
    put:
      tags:
        - Applications
      summary: Edit an application
      description: Updates the name of a specific application by its ID.
      operationId: edit
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/Application"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - admin-api: [ ]
    delete:
      tags:
        - Applications
      summary: Delete an application
      description: Deletes a specific application by its ID.
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - admin-api: [ ]
  /admin/v1/apps/{id}/api-key:
    get:
      tags:
        - Applications
      summary: Get an application's API key
      description: Retrieves the API key of a specific application by its ID.
      operationId: getApiKey
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ApplicationApiKey"
        "401":
          description: Unauthorized
        "404":
          description: Not Found
      security:
        - admin-api: [ ]
  /v1/signup/start:
    post:
      tags:
        - Sign-up
      summary: Initiate sign-up process
      description: Starts the sign-up process by generating an attestation challenge.
      operationId: postSignupStart
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpStartRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpStartResponse"
  /v1/signup/finish:
    post:
      tags:
        - Sign-up
      summary: Complete sign-up process
      description: Completes the sign-up process by validating the attestation and registering the new credential.
      operationId: postSignupFinish
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpFinishRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpFinishResponse"
  /v1/signin/start:
    post:
      tags:
        - Sign-in
      operationId: postSignInCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInStartRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignInStartResponse"
  /v1/signin/finish:
    post:
      tags:
        - Sign-in
      operationId: finishSignInCredential
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignInFinishRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignInFinishResponse"
  /v1/credentials/add/start:
    post:
      tags:
        - Users
      summary: Initiate adding a new passkey to user account
      description: Initiates the process of adding a new passkey to a user's account.
      operationId: credentialsAddStart
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpStartResponse"
  /v1/credentials/add/finish:
    post:
      tags:
        - Users
      summary: Complete the passkey addition process
      description: Completes the process of adding a new passkey to a user's account.
      operationId: credentialsAddFinish
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/SignUpFinishRequest"
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/SignUpFinishResponse"
  /v1/users/{uuid}/credentials:
    get:
      tags:
        - Users
      summary: Get user's credentials
      description: Retrieves a list of credentials associated with a specific user by UUID.
      operationId: getUserCredentials
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
          content:
            'application/json':
              schema:
                $ref: "#/components/schemas/ListPasskeysResponse"
  /v1/users/{uuid}:
    delete:
      tags:
        - Users
      summary: Delete user
      description: Deletes a specific user by their UUID.
      operationId: deleteUser
      parameters:
        - name: uuid
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        "200":
          description: OK
components:
  schemas:
    Application:
      type: object
      description: Represents an application with its attributes.
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the application.
        name:
          type: string
          description: Name of the application.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the application was created.
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the application was last updated.
    SignUpStartRequest:
      required:
        - name
      type: object
      description: Request to start the sign-up process. Contains the name of the entity to be registered.
      properties:
        name:
          type: string
          description: Name of the user to be registered.
    SignUpStartResponse:
      type: object
      description: Response to sign-up start request. Contains the request ID and options for attestation.
      properties:
        requestId:
          type: string
          description: Unique identifier for the sign-up request.
        options:
          type: string
          description: Options to pass to `navigator.credentials.create()`
    SignUpFinishRequest:
      type: object
      description: Request to finish the sign-up process. Contains the request ID and public key credential for attestation.
      properties:
        requestId:
          type: string
          description: Unique identifier for the sign-up request (from `SignUpStartResponse`)
        publicKeyCredential:
          type: string
          description: The public key credential for attestation as returned by `navigator.credentials.create()`
    SignUpFinishResponse:
      type: object
      description: Response to sign-up finish request. Contains the request ID and user ID of the new entity.
      properties:
        requestId:
          type: string
          description: Unique identifier for the sign-up request.
        userId:
          type: string
          format: uuid
          description: Unique identifier for the newly registered user.
    SignInStartRequest:
      type: object
      description: Request to start the sign-in process. Contains the name.
      properties:
        name:
          type: string
          description: Name of the user attempting to sign in.
    SignInStartResponse:
      type: object
      description: Response to sign-in start request. Contains the request ID and options for assertion.
      properties:
        requestId:
          type: string
          description: Unique identifier for the sign-in request.
        options:
          type: string
          description: Options for assertion to pass to `navigator.credentials.create()`
    SignInFinishRequest:
      type: object
      description: Request to finish the sign-in process. Contains the request ID and public key credential with assertion.
      properties:
        requestId:
          type: string
          description: Unique identifier for the sign-in request (from `SignInStartResponse`).
        publicKeyCredentialWithAssertion:
          type: string
          description: The public key credential with assertion.
    SignInFinishResponse:
      type: object
      description: Response to sign-in finish request. Contains the request ID and username.
      properties:
        requestId:
          type: string
          description: Unique identifier for the sign-in request.
        username:
          type: string
          description: Username of the entity that signed in.
    AddApplicationRequest:
      type: object
      description: Request to add a new client application. Contains the name of the application.
      properties:
        name:
          type: string
          description: Name of the new application.
    ListPasskeysResponse:
      type: object
      description: Response to list passkeys. Contains an array of user credentials.
      properties:
        passkeys:
          type: array
          description: A list of user credentials.
          items:
            $ref: "#/components/schemas/PasskeyCredential"
    PasskeyCredential:
      type: object
      description: Data Transfer Object for user credentials.
      properties:
        credentialId:
          type: string
          description: Unique identifier for the credential.
        userHandle:
          type: string
          description: Unique handle for the user.
        signatureCount:
          type: integer
          format: int64
          description: Number of times the credential has been used.
        displayName:
          type: string
          description: Display name for the credential.
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the credential was created.
        lastUsedAt:
          type: string
          format: date-time
          description: Timestamp when the credential was last used.
    ApplicationApiKey:
      type: object
      description: Data Transfer Object for an API key of a client application.
      properties:
        apiKey:
          type: string
          description: API key for the client application.
  securitySchemes:
    admin-api:
      type: apiKey
      name: X-Api-Key
      in: header